#include<bits/stdc++.h>
using namespace std;

#define ll long long int
#define N 5001
#define M 100000

int t,n,m;
vector<int>adj[N];
ll dp[N],path[N];
bool vis[N];

ll call(int u,ll *tot)
{
    if(vis[u])
    {
        *tot=(*tot+dp[u])%M;
        return path[u];
    }
    if(u==n)
    {
        vis[u]=1;
        dp[u]=1;
        *tot+=dp[u];
        return path[u]=1;
    }
    ll ret=0,tem_node_cnt=0;
    int v;
    for(int i=0;i<adj[u].size();i++)
    {
        v=adj[u][i];
        ret=(ret+call(v,&tem_node_cnt))%M;
    }
    if(u>1)
        tem_node_cnt=(tem_node_cnt+ret)%M;
    vis[u]=1;
    if(!ret)
        tem_node_cnt=0;
    dp[u]=tem_node_cnt;
    *tot=(*tot+tem_node_cnt)%M;
    return path[u]=ret;
}

int main()
{
//    freopen("f.txt","r",stdin);
//    freopen("g.txt","w",stdout);
    ios_base::sync_with_stdio(false);
    cin.tie(0);
    cout.tie(0);
    cin>>t;
    int u,v;
    for(int cas=1; cas<=t; cas++)
    {
        cin>>n>>m;
        for(int i=1; i<=n; i++)
            adj[i].clear();
        for(int i=0; i<m; i++)
        {
            cin>>u>>v;
            adj[u].push_back(v);
        }
        memset(dp,0,sizeof dp);
        memset(path,0,sizeof path);
        memset(vis,0,sizeof vis);
        ll tot=0;
        ll ans=call(1,&tot)%M;
        cout<<"Case "<<cas<<": "<<tot%M<<" "<<ans%M<<endl;
    }
    return 0;
}
